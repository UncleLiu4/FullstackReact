{"version":3,"sources":["components/Filter.js","components/Form.js","components/Persons.js","services/service.js","App.js","index.js"],"names":["Filter","searchText","handleSearch","value","onChange","Form","newName","handleNameChange","newPhone","handlePhoneChange","addNewName","onSubmit","type","Persons","persons","delHandler","map","item","key","id","name","number","onClick","data-id","data-name","baseUrl","axios","get","then","response","data","newObject","post","delete","App","useState","setPersons","setNewName","setNewPhone","setSearchText","msg","isError","errorMessage","setErrorMessage","useEffect","service","initialNotes","catch","err","console","log","updateErrMsg","obj","setTimeout","event","t","target","filter","toUpperCase","includes","message","notificationStyle","color","backgroundColor","fontSize","borderStyle","borderRadius","padding","marginBottom","style","preventDefault","returnedNote","concat","error","d","dataset","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8e99fa0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ searchText, handleSearch }) => {\r\n    return(\r\n        <div>\r\n            <p>filter shown with(buggy)</p>\r\n            <input value={searchText} onChange={handleSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst Form = ({ newName, handleNameChange, newPhone, handlePhoneChange, addNewName }) => {\r\n    return(\r\n        <form onSubmit={addNewName}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>number: <input value={newPhone} onChange={handlePhoneChange} /></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nconst Persons = ({ persons, delHandler }) => {\r\n    const rows = () => persons.map(item => <p key={item.id}>\r\n                                                {item.name} {item.number} \r\n                                                <button onClick={delHandler} data-id={item.id} data-name={item.name}>delete</button> \r\n                                            </p>)\r\n    return(\r\n        <div>\r\n            {rows()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons;","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst delObj = id => {    \r\n    const request = axios.delete(`${baseUrl}/${id}`) \r\n    return request.then(response => response)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update,\r\n  delObj: delObj,\r\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Persons from './components/Persons'\nimport service from './services/service'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ searchText, setSearchText ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState({ \n    msg: '', \n    isError: false \n  })\n\n  const hook = () => {\n    service.getAll()\n      .then(initialNotes =>setPersons(initialNotes))\n      .catch(err => console.log('err', err))\n    }\n\n  useEffect(hook, [])\n\n  const updateErrMsg = (obj) => {    \n    setErrorMessage(obj)\n    setTimeout(() => {\n      setErrorMessage({msg: '', isError: false})\n    }, 5000) \n  }\n\n  const addNewName = (event) => {\n    event.preventDefault()\n    // const t = persons.filter(elem => elem.name === newName)       \n    // if(t.length !== 0) {\n    //   const m = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n    //   if(m) {\n    //     const o = { name: newName, number: newPhone }\n    //     service.update(t[0].id, o).then(returnedNote => {              \n    //       updateErrMsg({ msg: `Added ${returnedNote.name}`, isError: false })\n    //       // 本地也要删除\n    //       const p = persons.filter(elem => elem.id !== Number(t[0].id))\n    //       setPersons(p.concat(returnedNote))\n    //     }).catch(err => console.log('err', err))\n    //   }\n    // } else {\n    //   const o = { name: newName, number: newPhone }\n    //   service.create(o).then(returnedNote => {  \n    //     updateErrMsg({ msg: `Added ${returnedNote.name}`, isError: false })\n    //     setPersons(persons.concat(returnedNote))        \n    //   }).catch(err => console.log('err', err))\n    // }  \n    const o = { name: newName, number: newPhone }\n    service.create(o).then(returnedNote => {  \n      updateErrMsg({ msg: `Added ${returnedNote.name}`, isError: false })\n      setPersons(persons.concat(returnedNote))        \n    }).catch(err => {\n      console.log('err\\n', err.response)\n      updateErrMsg({ msg: err.response.data.error, isError: true })      \n    })\n    setNewName('')    \n    setNewPhone('')\n  }\n\n  const Notification = ({ message }) => {    \n    const { msg, isError } = message\n    const notificationStyle = {\n      color: isError ? 'red' : 'green',\n      backgroundColor: 'lightgrey',\n      fontSize: '20px',\n      borderStyle: 'solid',\n      borderRadius: '5px',\n      padding: '10px',\n      marginBottom: '10px',\n    }\n    if (msg === '') {\n      return null\n    }\n  \n    return (\n      <div style={notificationStyle}>\n        {msg}\n      </div>\n    )\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handlePhoneChange = (event) => setNewPhone(event.target.value)\n  const handleSearch = (event) => {\n    const t = event.target.value\n    setSearchText(t)        \n    if(t !== '') {\n      setPersons(persons.filter( item => item.name.toUpperCase().includes(searchText.toUpperCase()) ))\n    }\n  }\n  const delHandler = (event) => {\n    const d = event.target.dataset\n    const t = window.confirm(`Delete ${d.name} ?`)\n    const name = d.name\n    if(t) {\n      const id = d.id\n      service.delObj(id)\n        .then(response => {          \n          const t = persons.filter( item => item.id !== id )      \n          setPersons(t)\n        })\n        .catch(err => {\n          console.log('del err', err)\n          updateErrMsg({msg: `${name} has already been removed from server`, isError: true})\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter searchText={searchText} handleSearch={handleSearch} />\n      <Notification message={errorMessage} />\n      <h2>Add a new note</h2>\n      <Form newName={newName} handleNameChange={handleNameChange} \n            newPhone={newPhone} handlePhoneChange={handlePhoneChange}\n            addNewName={addNewName} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} delHandler={delHandler} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}